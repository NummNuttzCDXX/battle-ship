@font-face {
	font-family: Rubik;
	src: url(../src/assets/Rubik-VariableFont_wght.ttf);
}

:root {
	font-size: clamp(16px, 3vmin, 40px);
	font-family: Rubik, Arial, Helvetica, sans-serif;

	/* Colors */
	--dark-blue: #011638ff;
	--blue: #0d21a1ff;
	--night: #141414ff;
	--antiflash-white: #eef0f2ff;
	--saffron: #eec643ff;
}

body {
	margin: 0;
	display: flex;
	flex-direction: column;

	min-width: 100vw;
	min-height: 100vh;
}

header {
	z-index: 3;
}

header h1 {
	text-align: center;
	font-size: 2.5em;

	/* Text Gradient */
	background: linear-gradient(to bottom, var(--antiflash-white) 15%, yellow 50%, rgb(253, 180, 11) 90%);
	background-clip: text;
	-moz-background-clip: text;
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
}

.start-screen {
	width: 100vw;
	height: 100vh;

	z-index: 2;
	position: absolute;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;

	background-color: var(--dark-blue);
	color: var(--saffron);
}

form {
	width: 25%;
}

fieldset {
	display: flex;
	flex-direction: column;
	align-items: center;
	gap: .5em;
}

.hide, .start-screen.hide {
	display: none;
}

.content {
	display: flex;
	flex-direction: column;
	justify-content: space-around;
}

/* Gameboards */
.board-container {
	width: 100%;
	display: flex;
	flex-direction: row;
	justify-content: space-around;
}

.gameboard {
	--size: 30vw; /* Width/Height of gameboard will both be the same */
	width: var(--size);
	height: var(--size);

	display: flex;
	position: relative;

	border: 2px solid black;
	background-color: blue;
}

.col {
	display: flex;
	flex-direction: column-reverse;
	flex: 1;

	border-left: 2px solid black;
	border-right: 2px solid black;
}

.cell {
	position: relative;

	flex: 1;

	border-top: 2px solid black;
	border-bottom: 2px solid black;
}

.cell img {
	position: absolute;
}

/* Water like pattern */
.col:nth-child(even) :nth-child(even) {
	background-image: linear-gradient(to bottom right, blue, rgb(0, 106, 255), rgb(40, 173, 255), rgb(0, 106, 255), blue);
}

.col:nth-child(even) :nth-child(odd) {
	background-image: linear-gradient(to bottom left, blue, rgb(0, 106, 255), rgb(40, 173, 255), rgb(0, 106, 255), blue);
}

.col:nth-child(odd) :nth-child(even) {
	background-image: linear-gradient(to bottom right, rgb(0, 106, 255), rgb(40, 173, 255), blue, rgb(40, 173, 255), rgb(0, 106, 255));
}
.col:nth-child(odd) :nth-child(odd) {
	background-image: linear-gradient(to bottom left, rgb(0, 106, 255), rgb(40, 173, 255), blue, rgb(40, 173, 255), rgb(0, 106, 255));
}

#player1 .hit, #player2 .hit {
	background-color: rgba(255, 22, 22, 0.786);
	background-image: none;
}

.ship-container {
	display: flex;
	justify-content: center;
	align-items: center;
	gap: 1rem;
	position: relative;
}

/* 
- Container will have .column when the images should be rotated inside container
- Just flipping the container to 'flex-direction: column;' doesnt orient imgs properly
- Instead, 'absolutely' position images and set position properties with javascript
('top:' prop will be different for each image)
*/
.ship-container.column img {
	position: absolute;
}

.gameboard .col .cell img {
	background-image: none;
}

/* Rotate class for Ships
`transform-origin` prop needs to be added dynamically (will be different for every ship) */
.rotate {
	transform: rotate(-90deg);
	z-index: 2;
}

.rotate-btn {
	position: absolute;
	top: 0;
}

.start {
	height: fit-content;
}

.x-icon {
	/* Color Icon Red */
	filter: invert(14%) sepia(90%) saturate(5380%) hue-rotate(2deg) brightness(106%) contrast(125%);
	z-index: 3;
}
